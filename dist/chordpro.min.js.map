{"version":3,"sources":["chordpro.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","chordpro","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Add9","Add11","Major6","SixNine","PowerChord","2","Major7","Minor7","Dominant7","Diminished7","Major9","Major11","Major13","AugmentedDominant7","AugmentedMajor7","Minor9","3","Major","Minor","Augmented","Diminished","4","initializeChordRegexes","map","Object","keys","noteNamings","forEach","noteNaming","initializeChordRegex","chordRegex","regexString","createRegexString","regexStringWithParens","createRegexStringWithParens","pattern","RegExp","patternWithParens","optional","concatenateAllValues","res","key","concat","concatenateAllValuesForExtendeds","greedyDisjunction","chordQualities","chordExtendeds","chordAddeds","chordSuspendeds","quote","str","regexpSpecialChars","replace","aliases","matchingGroup","slice","sort","b","lenCompare","alias","chordRegexes","./chord-addeds","./chord-extendeds","./chord-qualities","./chord-suspendeds","./note-namings","5","6","Sus4","Sus2","7","parse","prettyPrint","transpose","./parse","./pretty-print","./transpose","8","English","NorthernEuropean","SouthernEuropean","9","parseObject","match","root","reverseLookups","roots","foundExtended","extendeds","quality","extended","qualities","added","addeds","suspended","suspendeds","overridingRoot","substring","opts","naming","./chord-regexes","./reverse-lookups","10","chord","11","addReverseLookups","reverseDict","dict","arr","element","addReverseLookupsForExtendeds","pair","extendedsArr","rootLookups","chordQualitiesLookups","chordExtendedsLookups","chordSuspendedsLookups","chordAddedsLookups","12","transposeNote","note","num","idx","chordRoots","indexOf","clone","transposedChord","./chord-roots","./utils","13","extend","obj","14","undefined","hasOwn","prototype","hasOwnProperty","toString","isPlainObject","nodeType","setInterval","has_own_constructor","has_is_property_of_method","constructor","options","name","src","copy","copyIsArray","target","arguments","deep","Array","isArray","15","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","value","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","object","basePropertyOf","baseReduce","baseSortBy","comparer","current","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","done","push","mapToArray","size","overArg","transform","arg","replaceHolders","PLACEHOLDER","setToArray","set","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","join","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","Function","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","types","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","type","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","defineProperty","configurable","enumerable","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","subValue","keysFunc","getAllKeysIn","getAllKeys","baseConforms","baseConformsTo","baseDelay","wait","TypeError","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","safeGet","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneRegExp","regexp","exec","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","Ctor","isBind","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","message","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","proto","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","timeWaiting","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","sign","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","charCodeAt","subString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extendWith","each","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","16","factory","nodeName","Mustache","mustache","typeStr","hasProperty","propName","testRegExp","re","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","s","entityMap","parseTemplate","tags","stripSpace","hasTag","nonSpace","spaces","tokens","compileTags","tagsToCompile","spaceRe","openingTagRe","closingTagRe","closingCurlyRe","sections","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","Context","parentContext",".","Writer","/","`","=","lookup","lookupHit","clearCache","render","renderTokens","originalTemplate","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","j","version","defaultWriter","to_html","send","17","chordProStr","commentPattern","chordPattern","directivePattern","sectionHeadPattern","song","Song","createSection","line","lineText","lines","addSection","createLine","directive","sectionHead","directiveName","directiveValue","chords","createChord","addLineSegment","createLineSegment","lineSegments","addLine","Chords","./lib/chords","./lib/song","18","_classCallCheck","instance","Constructor","getSharpEquivalent","chordText","val","notes","getTranspose","origKey","targetKey","origKeyIdx","targetKeyIdx","getNoteInterval","interval","getKeysContainingChord","intervals","noteChord","minor","getRootNote","intonation","_createClass","defineProperties","descriptor","protoProps","staticProps","chordMagic","sharps","Chord","transposeProperties","chordMagicked","getOrigText","chord-magic","19","Section","Line","lineSegment","LineSegment","text","title","subtitle","album","author","copyright","tempo","keywords","songTemplate","setTranspose","setTargetKey","formattedChord","getText","formattedText","newText","leadingSpaceCount","trailingSpaceCount","./chords"],"mappings":"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","file":"chordpro.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.chordpro = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  Add9: [\"add9\", \"2\"],\n  Add11: [\"add11\", \"4\"],\n  Major6: [\"6\",\"maj6\",\"major6\", \"M6\"],\n  SixNine: [\"6/9\"],\n  PowerChord: [\"5\"] // duh duh DUH, duh duh DUH-duh, duh duh DUH, duh duh ((c) Deep Purple)\n};\n},{}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  // sevenths\n  Major7: ['Major', [\"maj7\", \"Maj7\", \"M7\", \"+7\"]],\n  Minor7: ['Minor', [\"m7\", \"Min7\", \"min7\", \"minor7\"]],\n  Dominant7: ['Major', [\"7\", \"dom7\", \"dominant7\"]],\n  Diminished7: ['Diminished', [\"dim7\", \"diminished7\"]],\n\n  // true extended\n  Major9: ['Major', [\"maj9\", \"M9\", \"9\"]],\n  Major11: ['Major', [\"maj11\", \"M11\", \"11\"]],\n  Major13: ['Major', [\"maj13\", \"M13\", \"13\"]],\n\n  // weird ones\n  AugmentedDominant7: ['Major', [\"7#5\", \"7(#5]\"]],\n  AugmentedMajor7: ['Major', [\"maj7#5\", \"maj7(#5]\"]],\n\n  // TODO: I don't know what this one is - can't find it on wikipedia\n  Minor9: ['Minor', [\"min9\", \"m9\", \"minor9\"]]\n  \n};\n},{}],3:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  Major:  [\"\", \"major\", \"maj\", \"M\"],\n  Minor:  [\"m\", \"minor\", \"min\"],\n  Augmented: [\"aug\", \"augmented\", \"+\"],\n  Diminished: [\"dim\", \"diminished\"]\n};\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar noteNamings = require('./note-namings');\nvar chordAddeds = require('./chord-addeds');\nvar chordSuspendeds = require('./chord-suspendeds');\nvar chordQualities = require('./chord-qualities');\nvar chordExtendeds = require('./chord-extendeds');\n\nvar chordRegexes = initializeChordRegexes();\n\nmodule.exports = chordRegexes;\n\nfunction initializeChordRegexes() {\n  var map = {};\n\n  Object.keys(noteNamings).forEach(function (noteNaming) {\n    map[noteNaming] = initializeChordRegex(noteNamings[noteNaming]);\n  });\n  return map;\n}\n\nfunction initializeChordRegex(noteNaming) {\n  var chordRegex = {};\n\n  var regexString = createRegexString(noteNaming);\n  var regexStringWithParens = createRegexStringWithParens(regexStringWithParens);\n\n  chordRegex.regexString = regexString;\n  chordRegex.regexStringWithParens = regexStringWithParens;\n  chordRegex.pattern = new RegExp(regexString);\n  chordRegex.patternWithParens = new RegExp(regexStringWithParens);\n\n  return chordRegex;\n}\n\nfunction optional(pattern) {\n  return \"(\" + pattern + \"?)\";\n}\n\nfunction concatenateAllValues(map) {\n  var res = [];\n  Object.keys(map).forEach(function (key) {\n    res = res.concat(map[key]);\n  });\n  return res;\n}\n\n// extendeds are different; their values are an array of\n// [type, names]\nfunction concatenateAllValuesForExtendeds(map) {\n  var res = [];\n  Object.keys(map).forEach(function (key) {\n    res = res.concat(map[key][1]);\n  });\n  return res;\n}\n\nfunction createRegexString(noteNaming) {\n  return greedyDisjunction(concatenateAllValues(noteNaming), true) + // root note\n    optional(greedyDisjunction(\n      concatenateAllValues(chordQualities).concat(\n        concatenateAllValuesForExtendeds(chordExtendeds)))) + // quality OR seventh\n    optional(greedyDisjunction(concatenateAllValues(chordAddeds))) + // add\n    optional(greedyDisjunction(concatenateAllValues(chordSuspendeds))) + // sus\n\n    // overridden root note (\"over\")\n    optional(\"(?:/\" + greedyDisjunction(concatenateAllValues(noteNaming)) +\n      \")\");\n}\n\nfunction createRegexStringWithParens(regexString) {\n  return \"[\\\\(\\\\[]\" + regexString + \"[\\\\)\\\\]]\";\n}\n\nfunction quote(str) {\n  // stolen from http://stackoverflow.com/a/3614500/680742\n  var regexpSpecialChars = /([\\[\\]\\^\\$\\|\\(\\)\\\\\\+\\*\\?\\{\\}\\=\\!])/gi;\n\n  return str.replace(regexpSpecialChars, '\\\\$1');\n}\n\n/**\n * Take an array of strings and make a greedy disjunction regex pattern out of it,\n * with the longest strings first, e.g. [\"sus4\",\"sus\",\"sus2\"] -->\n *\n * (sus4|sus2|sus)\n * @param allAliases\n * @return\n */\nfunction greedyDisjunction(aliases, matchingGroup) {\n\n  aliases = aliases.slice(); // copy\n\n  // sort by longest string first\n  aliases.sort(function (a, b) {\n    var lenCompare = b.length - a.length;\n    if (lenCompare !== 0) {\n      return lenCompare < 0 ? -1 : 1;\n    }\n    // else sort by normal string comparison\n    return a < b ? -1 : 1;\n  });\n\n  var res = '(';\n\n  if (!matchingGroup) {\n    res +=  '?:'; //  non-matching group\n  }\n\n  aliases.forEach(function (alias, i) {\n    if (!alias) {\n      return; // e.g. the \"major\" quality can be expressed as an empty string, so skip in the regex\n    }\n    if (i > 0) {\n      res += '|';\n    }\n    res += quote(alias);\n  });\n\n  return res + ')';\n}\n\ninitializeChordRegexes();\n},{\"./chord-addeds\":1,\"./chord-extendeds\":2,\"./chord-qualities\":3,\"./chord-suspendeds\":6,\"./note-namings\":8}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = [\n  'A',\n  'Bb',\n  'B',\n  'C',\n  'Db',\n  'D',\n  'Eb',\n  'E',\n  'F',\n  'Gb',\n  'G',\n  'Ab'\n];\n},{}],6:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  Sus4: [\"sus4\", \"suspended\", \"sus\"],\n  Sus2: [\"sus2\", \"suspended2\"]\n};\n},{}],7:[function(require,module,exports){\n'use strict';\n\nexports.parse = require('./parse');\nexports.prettyPrint = require('./pretty-print');\nexports.transpose = require('./transpose');\n},{\"./parse\":9,\"./pretty-print\":10,\"./transpose\":12}],8:[function(require,module,exports){\n'use strict';\n\nvar English = {};\nEnglish['A'] = ['A'];\nEnglish['Bb'] = ['Bb', 'A#', 'Asharp', 'Bflat'];\nEnglish['B'] = ['B'];\nEnglish['C'] = ['C'];\nEnglish['Db'] = ['Db', 'C#', 'Dflat', 'Csharp'];\nEnglish['D'] = ['D'];\nEnglish['Eb'] = ['Eb', 'D#', 'Eflat', 'Dsharp'];\nEnglish['E'] = ['E'];\nEnglish['F'] = ['F'];\nEnglish['Gb'] = ['Gb', 'F#', 'Gflat', 'Gsharp'];\nEnglish['G'] = ['G'];\nEnglish['Ab'] = ['Ab', 'G#', 'Aflat', 'Gsharp'];\n\nvar NorthernEuropean = {};\nNorthernEuropean['A'] = ['A'];\nNorthernEuropean['Bb'] = ['B', 'A#', 'Asharp'];\nNorthernEuropean['B'] = ['H'];\nNorthernEuropean['C'] = ['C'];\nNorthernEuropean['Db'] = ['Db', 'C#', 'Dflat', 'Csharp'];\nNorthernEuropean['D'] = ['D'];\nNorthernEuropean['Eb'] = ['Eb', 'D#', 'Eflat', 'Dsharp'];\nNorthernEuropean['E'] = ['E'];\nNorthernEuropean['F'] = ['F'];\nNorthernEuropean['Gb'] = ['Gb', 'F#', 'Gflat', 'Gsharp'];\nNorthernEuropean['G'] = ['G'];\nNorthernEuropean['Ab'] = ['Ab', 'G#', 'Aflat', 'Gsharp'];\n\nvar SouthernEuropean = {};\nSouthernEuropean['A'] = ['La'];\nSouthernEuropean['Bb'] = ['Tib', 'La#'];\nSouthernEuropean['B'] = ['Ti'];\nSouthernEuropean['C'] = ['Do'];\nSouthernEuropean['Db'] = ['Reb', 'Réb', 'Do#'];\nSouthernEuropean['D'] = ['Re', 'Ré'];\nSouthernEuropean['Eb'] = ['Mib', 'Re#'];\nSouthernEuropean['E'] = ['Mi'];\nSouthernEuropean['F'] = ['Fa'];\nSouthernEuropean['Gb'] = ['Solb', 'Sob', 'Fa#'];\nSouthernEuropean['G'] = ['Sol', 'So'];\nSouthernEuropean['Ab'] = ['Lab', 'So#', 'Sol#'];\n\nmodule.exports = {\n  English: English,\n  NorthernEuropean: NorthernEuropean,\n  SouthernEuropean: SouthernEuropean\n};\n},{}],9:[function(require,module,exports){\n'use strict';\n\nvar chordRegexes = require('./chord-regexes');\nvar reverseLookups = require('./reverse-lookups');\n\nmodule.exports = function parse(str, opts) {\n  opts = opts || {};\n  var noteNaming = opts.naming || 'English';\n\n  var match = str.match(chordRegexes[noteNaming].pattern);\n\n  return match && parseObject(match, noteNaming);\n};\n\nfunction parseObject(match, noteNaming) {\n\n  // match objects is 6 elements:\n  // full string, root, quality or extended, added, suspended, overriding root\n  // e.g. [\"Cmaj7\", \"C\", \"maj7\", \"\", \"\", \"\"]\n\n  var res = {};\n\n  res.root = reverseLookups.roots[noteNaming][match[1]];\n\n  var foundExtended = reverseLookups.extendeds[match[2]];\n  if (foundExtended) {\n    res.quality = foundExtended.quality;\n    res.extended = foundExtended.extended;\n  } else { // normal quality without extended\n    res.quality = reverseLookups.qualities[match[2]];\n  }\n\n  if (match[3]) {\n    res.added = reverseLookups.addeds[match[3]];\n  }\n\n  if (match[4]) {\n    res.suspended = reverseLookups.suspendeds[match[4]];\n  }\n\n  if (match[5]) {\n    // substring(1) to cut off the slash, because it's e.g. \"/F\"\n    res.overridingRoot = reverseLookups.roots[noteNaming][match[5].substring(1)];\n  }\n\n  return res;\n}\n},{\"./chord-regexes\":4,\"./reverse-lookups\":11}],10:[function(require,module,exports){\n'use strict';\n\nvar noteNamings = require('./note-namings');\nvar chordQualities = require('./chord-qualities');\nvar chordExtendeds = require('./chord-extendeds');\nvar chordAddeds = require('./chord-addeds');\nvar chordSuspendeds = require('./chord-suspendeds');\n\nmodule.exports = function prettyPrint(chord, opts) {\n  opts = opts || {};\n  var naming = opts.naming || 'English';\n  // just use the first name for now, but later we may want to add options\n  // to allow people to choose how to express chord. e.g. to prefer flats\n  // instead of sharps, or prefer certain flats to certain sharps, etc.\n  // (e.g. 'Bb' seems to be more common than 'A#', but 'F#' is more common than 'Ab')\n\n  var str = noteNamings[naming][chord.root][0];\n  if (chord.extended) {\n    str += chordExtendeds[chord.extended][1][0];\n  } else {\n    str += chordQualities[chord.quality][0];\n  }\n\n  if (chord.added) {\n    str += chordAddeds[chord.added][0];\n  }\n\n  if (chord.suspended) {\n    str += chordSuspendeds[chord.suspended][0];\n  }\n\n  if (chord.overridingRoot) {\n    str += '/' + noteNamings[naming][chord.overridingRoot][0];\n  }\n  return str;\n};\n},{\"./chord-addeds\":1,\"./chord-extendeds\":2,\"./chord-qualities\":3,\"./chord-suspendeds\":6,\"./note-namings\":8}],11:[function(require,module,exports){\n'use strict';\n\n// given a string and a note naming, return the structured version of it.\n\nvar rootLookups = {};\n\nvar noteNamings = require('./note-namings');\nvar chordQualities = require('./chord-qualities');\nvar chordExtendeds = require('./chord-extendeds');\nvar chordAddeds = require('./chord-addeds');\nvar chordSuspendeds = require('./chord-suspendeds');\n\nObject.keys(noteNamings).forEach(function (noteNaming) {\n  rootLookups[noteNaming] = {};\n  addReverseLookups(rootLookups[noteNaming], noteNamings[noteNaming]);\n});\n\nvar chordQualitiesLookups = {};\n\naddReverseLookups(chordQualitiesLookups, chordQualities);\n\nvar chordExtendedsLookups = {};\n\naddReverseLookupsForExtendeds(chordExtendedsLookups, chordExtendeds);\n\nvar chordSuspendedsLookups = {};\n\naddReverseLookups(chordSuspendedsLookups, chordSuspendeds);\n\nvar chordAddedsLookups = {};\n\naddReverseLookups(chordAddedsLookups, chordAddeds);\n\nfunction addReverseLookups(reverseDict, dict) {\n  Object.keys(dict).forEach(function (key) {\n    var arr = dict[key];\n    arr.forEach(function (element) {\n      reverseDict[element] = key;\n    });\n  });\n}\n\n// extendeds are a little different, because they contain both the quality\n// and the extendeds\nfunction addReverseLookupsForExtendeds(reverseDict, dict) {\n  Object.keys(dict).forEach(function (key) {\n    var pair = dict[key];\n    var quality = pair[0];\n    var extendedsArr = pair[1];\n    extendedsArr.forEach(function (element) {\n      reverseDict[element] = {\n        quality: quality,\n        extended: key\n      };\n    });\n  });\n}\n\nmodule.exports = {\n  roots: rootLookups,\n  qualities: chordQualitiesLookups,\n  extendeds: chordExtendedsLookups,\n  addeds: chordAddedsLookups,\n  suspendeds: chordSuspendedsLookups\n};\n},{\"./chord-addeds\":1,\"./chord-extendeds\":2,\"./chord-qualities\":3,\"./chord-suspendeds\":6,\"./note-namings\":8}],12:[function(require,module,exports){\n'use strict';\n\nvar chordRoots = require('./chord-roots');\nvar clone = require('./utils').clone;\n\nfunction transposeNote(note, num) {\n\n  var idx = chordRoots.indexOf(note);\n\n  if (idx === -1) {\n    throw new Error('unknown note: ' + note);\n  }\n\n  idx += num;\n\n  if (idx > 0) {\n    idx = idx % chordRoots.length;\n  } else {\n    idx = (chordRoots.length + idx) % chordRoots.length;\n  }\n\n  return chordRoots[idx];\n}\n\nmodule.exports = function transpose(chord, num) {\n  if (typeof num !== 'number') {\n    throw new Error('you need to provide a number');\n  }\n\n  var transposedChord = clone(chord);\n\n  transposedChord.root = transposeNote(chord.root, num);\n\n  if (chord.overridingRoot) {\n    transposedChord.overridingRoot = transposeNote(chord.overridingRoot, num);\n  }\n\n  return transposedChord;\n};\n},{\"./chord-roots\":5,\"./utils\":13}],13:[function(require,module,exports){\n'use strict';\n\nvar extend = require('extend');\n\nexports.extend = extend;\n\nexports.clone = function (obj) {\n  return extend(true, {}, obj);\n};\n},{\"extend\":14}],14:[function(require,module,exports){\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\nvar undefined;\n\nvar isPlainObject = function isPlainObject(obj) {\n\t\"use strict\";\n\tif (!obj || toString.call(obj) !== '[object Object]' || obj.nodeType || obj.setInterval) {\n\t\treturn false;\n\t}\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {}\n\n\treturn key === undefined || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\t\"use strict\";\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === \"boolean\") {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if (typeof target !== \"object\" && typeof target !== \"function\" || target == undefined) {\n\t\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ((options = arguments[i]) != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target === copy) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray(src) ? src : [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n},{}],15:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],16:[function(require,module,exports){\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.2';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\n/*\n * ChordProJS - Parse and render ChordPro formatted songs.\n * Copyright (c) 2016 Tom Davies\n */\n\nvar Song = require('./lib/song');\nvar Chords = require('./lib/chords');\n\n/**\n * Parse a ChordPro formatted string and return the generated Song object.\n * @param  {string}\t\tchordProStr\t\tThe ChordPro string to parse\n * @return {Song}\n */\nfunction parse(chordProStr) {\n  var commentPattern = /^\\s*#.*/;\n  var chordPattern = /\\[([^\\]]*)\\]/;\n  var directivePattern = /^{([\\w]*):?(.*)?}/;\n  var sectionHeadPattern = /^([A-z0-9\\s]+):(\\s*)$/;\n  var song = new Song();\n  var section = song.createSection();\n  var line = null;\n  var chord = null;\n\n  chordProStr.split(\"\\n\").forEach(function (lineText) {\n    if (lineText.trim() < 1 && section.lines.length > 0) {\n      // Start a new section\n      song.addSection(section);\n      section = song.createSection();\n      return;\n    }\n\n    line = song.createLine();\n\n    // Ignore any comments\n    if (!lineText.match(commentPattern)) {\n      // Command line\n      var directive = lineText.match(directivePattern);\n      var sectionHead = lineText.match(sectionHeadPattern);\n      if (directive) {\n        var directiveName = directive[1];\n        var directiveValue = directive[2];\n        // Parse directive\n        switch (directiveName) {\n          case 'title':\n          case 'subtitle':\n          case 'album':\n          case 'author':\n          case 'copyright':\n          case 'key':\n          case 'tempo':\n          case 'time':\n          case 'keywords':\n            song[directiveName] = directiveValue;\n            break;\n        }\n      } else if (sectionHead) {\n        if (section.lines.length > 0) {\n          // Start a new section\n          song.addSection(section);\n          section = song.createSection();\n        }\n\n        section.name = sectionHead[1];\n      } else {\n        // Lyrics/chords\n        lineText.split(chordPattern).forEach(function (word, i) {\n          if (i % 2 > 0) {\n            if (word.length > 0) {\n              chord = song.chords.createChord(word);\n            } else {\n              chord = null;\n            }\n          } else if (chord !== null || word.length > 0) {\n            line.addLineSegment(song.createLineSegment(chord, word));\n            chord = null;\n          }\n        });\n      }\n    }\n\n    if (line.lineSegments.length > 0) {\n      section.addLine(line);\n    }\n  });\n\n  song.addSection(section);\n\n  return song;\n}\n\nmodule.exports = { parse: parse, Song: Song, Chords: Chords };\n\n},{\"./lib/chords\":18,\"./lib/song\":19}],18:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * ChordProJS - Parse and render ChordPro formatted songs.\n * Copyright (c) 2016 Tom Davies\n *\n * chords.js\n * Module for processing chords in song, handling key detection and chord transposition.\n */\n\nvar _ = require('lodash'),\n    chordMagic = require('chord-magic');\n\nvar notes = ['A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab'];\nvar sharps = ['A', 'B', 'D', 'E', 'G'];\nvar intervals = [{ step: 2, minor: true }, { step: 2, minor: true }, { step: 1 }, { step: 2 }, { step: 2, minor: true }, { step: 2 }, { step: 1 }];\n\nfunction getSharpEquivalent(chordText) {\n    return chordText.split(\"/\").map(function (val) {\n        if (val.indexOf('b') === 1) {\n            var idx = notes.indexOf(val.substring(0, 2)) - 1;\n\n            if (idx < 0) {\n                idx = notes.length - 1;\n            }\n\n            return notes[idx] + '#' + val.substring(2);\n        }\n\n        return val;\n    }).join(\"/\");\n}\n\nfunction getTranspose(origKey, targetKey) {\n    var origKeyIdx = notes.indexOf(origKey);\n    var targetKeyIdx = notes.indexOf(targetKey);\n\n    if (origKeyIdx > -1 && targetKeyIdx > -1) {\n        return targetKeyIdx - origKeyIdx;\n    }\n\n    return 0;\n}\n\nfunction getNoteInterval(note, interval) {\n    var i = notes.indexOf(note) + interval;\n\n    if (i >= notes.length) {\n        i = i - notes.length;\n    }\n\n    return notes[i];\n}\n\nfunction getScale(note, minor) {\n    var intervals = minor ? intervalsMinor : intervalsMajor;\n    var scale = [note];\n    var prevNote = note;\n\n    intervals.forEach(function (interval) {\n        prevNote = getNoteInterval(prevNote, interval.step);\n        scale.push(prevNote);\n    });\n\n    return scale;\n}\n\nfunction getKeysContainingChord(chord) {\n    var keys = [];\n\n    notes.forEach(function (key) {\n        var note = key;\n        // For each key, go over each chord and check for match\n        intervals.forEach(function (interval) {\n            note = getNoteInterval(note, interval.step);\n            var noteChord = note + (interval.minor ? 'm' : '');\n            if (chord === noteChord) {\n                // Add this key to keys\n                keys.push(key);\n                return;\n            }\n        });\n    });\n\n    return keys;\n}\n\nfunction getRootNote(chord) {\n    var note = chord.charAt(0);\n    var intonation = chord.charAt(1);\n\n    if (intonation === '#') {\n        intonation = 'b';\n        note = getNoteInterval(note, 2);\n    } else if (intonation !== 'b') {\n        intonation = '';\n    }\n\n    return note + intonation;\n}\n\nfunction findKey(chords) {\n    var keys = _.countBy(_.flatten(chords.map(function (chord) {\n        var note = getRootNote(chord);\n        chord = chord.substring(note.length);\n        if (chord.indexOf('m') === 0 && chord.indexOf('maj') !== 0 || chord.indexOf('min') === 0) {\n            note = note + 'm';\n        }\n\n        return getKeysContainingChord(note);\n    })));\n\n    // Return the most likely (most frequent) key for the chords passed in.\n    return _.maxBy(_.map(keys, function (val, key) {\n        return { key: key, count: val };\n    }), 'count').key;\n}\n\nvar Chord = function () {\n    function Chord(chordText, transposeProperties) {\n        _classCallCheck(this, Chord);\n\n        this.transposeProperties = transposeProperties;\n        this.chordMagicked = chordMagic.parse(chordText);\n    }\n\n    _createClass(Chord, [{\n        key: 'getText',\n        value: function getText() {\n            var chord = this.chordMagicked;\n            var transpose = this.transposeProperties.transpose;\n\n            if (this.transposeProperties.targetKey !== null) {\n                // Work out transpose from original key\n                transpose = getTranspose(this.transposeProperties.origKey, this.transposeProperties.targetKey);\n            } else {\n                // Get the target key from the transpose\n                this.transposeProperties.targetKey = chordMagic.prettyPrint(chordMagic.transpose(chordMagic.parse(this.transposeProperties.origKey), transpose));\n            }\n\n            if (transpose !== 0) {\n                chord = chordMagic.transpose(this.chordMagicked, transpose);\n            }\n\n            var chordText = chordMagic.prettyPrint(chord);\n\n            if (chordText.length > 1 && chordText.indexOf('b') > -1 && sharps.indexOf(this.transposeProperties.targetKey) > -1) {\n                chordText = getSharpEquivalent(chordText);\n            }\n\n            return chordText;\n        }\n    }, {\n        key: 'getOrigText',\n        value: function getOrigText() {\n            return chordMagic.prettyPrint(this.chordMagicked);\n        }\n    }]);\n\n    return Chord;\n}();\n\nvar Chords = function () {\n    function Chords() {\n        _classCallCheck(this, Chords);\n\n        this.chords = [];\n        this.transposeProperties = {\n            origKey: '',\n            targetKey: null,\n            transpose: 0\n        };\n    }\n\n    _createClass(Chords, [{\n        key: 'getOrigKey',\n        value: function getOrigKey() {\n            return this.transposeProperties.origKey;\n        }\n    }, {\n        key: 'getTargetKey',\n        value: function getTargetKey() {\n            return this.transposeProperties.targetKey;\n        }\n    }, {\n        key: 'setTargetKey',\n        value: function setTargetKey(targetKey) {\n            targetKey = chordMagic.parse(targetKey).root;\n            if (notes.indexOf(targetKey) > -1) {\n                this.transposeProperties.targetKey = targetKey;\n            }\n        }\n    }, {\n        key: 'setTranspose',\n        value: function setTranspose(transpose) {\n            this.transposeProperties.transpose = transpose;\n            this.transposeProperties.targetKey = null;\n        }\n    }, {\n        key: 'createChord',\n        value: function createChord(chordText) {\n            var chord = new Chord(chordText, this.transposeProperties);\n            this.chords.push(chord);\n            // Detect key\n            this.transposeProperties.origKey = findKey(this.chords.map(function (chord) {\n                return chord.getOrigText();\n            }));\n            return chord;\n        }\n    }]);\n\n    return Chords;\n}();\n\nmodule.exports = Chords;\n\n},{\"chord-magic\":7,\"lodash\":15}],19:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * ChordProJS - Parse and render ChordPro formatted songs.\n * Copyright (c) 2016 Tom Davies\n *\n * song.js\n * Classes for Song, Section, Line, and LineSegment - the data structures for the parsed song.\n */\n\nvar Chords = require('./chords'),\n    _ = require('lodash'),\n    mustache = require('mustache');\n\nvar Section = function () {\n\tfunction Section() {\n\t\t_classCallCheck(this, Section);\n\n\t\tthis.name = \"\";\n\t\tthis.lines = [];\n\t}\n\n\t_createClass(Section, [{\n\t\tkey: 'addLine',\n\t\tvalue: function addLine(line) {\n\t\t\tthis.lines.push(line);\n\t\t}\n\t}]);\n\n\treturn Section;\n}();\n\nvar Line = function () {\n\tfunction Line() {\n\t\t_classCallCheck(this, Line);\n\n\t\tthis.lineSegments = [];\n\t}\n\n\t_createClass(Line, [{\n\t\tkey: 'addLineSegment',\n\t\tvalue: function addLineSegment(lineSegment) {\n\t\t\tthis.lineSegments.push(lineSegment);\n\t\t}\n\t}]);\n\n\treturn Line;\n}();\n\nvar LineSegment = function LineSegment(chord, text) {\n\t_classCallCheck(this, LineSegment);\n\n\tthis.chord = chord;\n\tthis.text = text;\n};\n\nvar Song = function () {\n\tfunction Song() {\n\t\t_classCallCheck(this, Song);\n\n\t\tthis.title = '';\n\t\tthis.subtitle = '';\n\t\tthis.album = '';\n\t\tthis.author = '';\n\t\tthis.copyright = '';\n\t\tthis.key = '';\n\t\tthis.tempo = '';\n\t\tthis.time = '';\n\t\tthis.keywords = '';\n\t\tthis.sections = [];\n\t\tthis.chords = new Chords();\n\t}\n\n\t_createClass(Song, [{\n\t\tkey: 'addSection',\n\t\tvalue: function addSection(section) {\n\t\t\tthis.sections.push(section);\n\t\t}\n\t}, {\n\t\tkey: 'createSection',\n\t\tvalue: function createSection() {\n\t\t\treturn new Section();\n\t\t}\n\t}, {\n\t\tkey: 'createLine',\n\t\tvalue: function createLine() {\n\t\t\treturn new Line();\n\t\t}\n\t}, {\n\t\tkey: 'createLineSegment',\n\t\tvalue: function createLineSegment(chord, text) {\n\t\t\treturn new LineSegment(chord, text);\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render(songTemplate, transpose) {\n\t\t\t// Is songTemplate a template, or is it a transpose property?\n\t\t\tif (_.isUndefined(transpose) && !_.isUndefined(songTemplate) && (_.isString(songTemplate) && songTemplate.length < 3 || _.isNumber(songTemplate))) {\n\t\t\t\ttranspose = songTemplate;\n\t\t\t\tsongTemplate = null;\n\t\t\t}\n\n\t\t\tvar song = this;\n\t\t\tsongTemplate = songTemplate || '{{#song}}\\n' + '<div class=\"song\">\\n' + '<div class=\"song-heading\">' + '<h1 class=\"song-title\">{{title}}</h1>\\n' + '<h3 class=\"song-subtitle\">({{subtitle}})</h3>\\n' + '</div>' + '{{#sections}}\\n' + '<div class=\"song-section\">\\n' + '<h3 class=\"song-section-name\">{{name}}</h3>\\n' + '{{#lines}}\\n' + '<table class=\"song-line\" cellspacing=\"0\" cellpadding=\"0\">\\n' + '<tr class=\"song-chords\">\\n' + '{{#lineSegments}}\\n' + '<td>{{{formattedChord}}}</td>\\n' + '{{/lineSegments}}\\n' + '</tr>\\n' + '<tr class=\"song-text\">\\n' + '{{#lineSegments}}\\n' + '<td><span class=\"song-text-segment\">{{{formattedText}}}</span></td>\\n' + '{{/lineSegments}}\\n' + '</tr>\\n' + '</table>\\n' + '{{/lines}}\\n' + '</div>\\n' + '{{/sections}}\\n' + '</div>' + '{{/song}}';\n\n\t\t\tif (_.isNumber(transpose)) {\n\t\t\t\tsong.chords.setTranspose(transpose);\n\t\t\t} else if (_.isString(transpose)) {\n\t\t\t\tsong.chords.setTargetKey(transpose);\n\t\t\t}\n\n\t\t\treturn mustache.render(songTemplate, {\n\t\t\t\tsong: song,\n\t\t\t\tformattedChord: function formattedChord() {\n\t\t\t\t\tif (this.chord !== null) {\n\t\t\t\t\t\treturn this.chord.getText().split('').map(function (value) {\n\t\t\t\t\t\t\tif (value === '#') {\n\t\t\t\t\t\t\t\treturn '<span class=\"music-symbol\" style=\"font-family: Arial Unicode MS, Lucida Sans Unicode;\">♯</span>';\n\t\t\t\t\t\t\t} else if (value === \"b\") {\n\t\t\t\t\t\t\t\treturn '<span class=\"music-symbol\" style=\"font-family: Arial Unicode MS, Lucida Sans Unicode;\">♭</span>';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}).join('') + '&nbsp;';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tformattedText: function formattedText() {\n\t\t\t\t\t// If there are leading or trailing spaces, replace with &nbsp;\n\t\t\t\t\t// Check for leading spaces\n\t\t\t\t\tvar leadingSpaceCount = this.text.search(/\\S|$/);\n\t\t\t\t\tvar trailingSpaceCount = this.text.length - (leadingSpaceCount + this.text.trim().length);\n\t\t\t\t\tvar newText;\n\t\t\t\t\tvar i;\n\n\t\t\t\t\tif (leadingSpaceCount > 0) {\n\t\t\t\t\t\tnewText = '';\n\t\t\t\t\t\tfor (i = 0; i < leadingSpaceCount; i++) {\n\t\t\t\t\t\t\tnewText = newText + '&nbsp;';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewText = newText + this.text.trim();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewText = this.text.trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check for trailing spaces\n\t\t\t\t\tif (trailingSpaceCount > 0) {\n\t\t\t\t\t\tfor (i = 0; i < trailingSpaceCount; i++) {\n\t\t\t\t\t\t\tnewText = newText + '&nbsp;';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newText;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn Song;\n}();\n\nmodule.exports = Song;\n\n},{\"./chords\":18,\"lodash\":15,\"mustache\":16}]},{},[17])(17)\n});\n"]}